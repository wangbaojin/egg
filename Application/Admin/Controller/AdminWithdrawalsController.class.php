<?php
namespace Admin\Controller;
/**
 * Created by PhpStorm.
 * User: wangbaojin
 * Date: 18/2/6
 * Time: 下午12:15
 */
class AdminWithdrawalsController extends AdminPublicController
{
    private $pay_state_info = array(
        1=>'待确认',
        2=>'待放款',
        3=>'放款中',
        4=>'已完成',
        5=>'放款失败'
    );

    private $state_info = array(
        1=>'申请中',
        2=>'已同意',
        3=>'已完成',
        4=>'已拒绝',
        5=>'已撤销'
    );

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        // 实例hua
        $this->_m = M($this->_table_name);
    }

    public function index()
    {
        // 分页
        $map = array();
        if(I('get.mobile')) $map['mobile'] = array('like',"%".I('get.mobile')."%");
        $page = (int)I('page');
        $data['page_limit']  = 20;
        $data['total_count'] = $this->_m->where($map)->count();
        $data['total_page']  = ceil($data['total_count']/$data['page_limit']);
        $data['now_page']    = ($page > 0 and $page <= $data['total_page']) ? $page : 1;
        $list = $this->_m->where($map)->page($page,$data['page_limit'])->order('id')->select();

        // 处理数据
        foreach ($list as $k=>$v)
        {
            $list[$k] = $this->disposeData($v);
        }

        $Page       = new \Think\Page($data['total_count'],$data['page_limit']);
        $show       = $Page->show();// 分页显示输出
        $this->assign('page',$show);// 赋值分页输出
        $this->assign('list',$list);
        $this->assign('count',$data['total_count']);
        $this->display();
    }

    // 确认放款
    public function confirmPay()
    {
        $id = I('get.id');

        if(!$id) die('参数错误');

        $save['pay_state'] = 3;

        if($this->_m->where('state=2 and pay_state=2 and id='.$id)->save($save)) die('success');
    }

    // 完成放款
    public function completePay()
    {
        $id = I('get.id');

        if(!$id) die('参数错误');

        $save['state']     = 3;
        $save['pay_state'] = 4;

        if($this->_m->where('state=2 and pay_state=3 and id='.$id)->save($save)) die('success');
    }

    // 设置备注
    public function setNote()
    {
        $id       = I('get.id');
        $note_msg = I('get.note_msg');

        if(!$id) die('参数错误');

        if($this->_m->where('id='.$id)->setField('note_msg',$note_msg)) die('success');

        die('修改失败');
    }

    // 同意提现
    public function agreeWithdrawals()
    {
        $id = I('get.id');

        if(!$id) die('参数错误');

        $save['state']     = 2;
        $save['pay_state'] = 2;

        if($this->_m->where('id='.$id)->save($save)) die('success');

        die('修改失败');
    }

    // 拒绝提现
    public function disagreeWithdrawals()
    {
        $id = I('get.id');

        if(!$id) die('参数错误');

        if($this->_m->where('id='.$id)->setField('state',4)) die('success');

        die('修改失败');
    }

    private function disposeData($arr)
    {
        // 状态
        $arr['pay_state_info'] = $this->pay_state_info[$arr['pay_state']];
        $arr['state_info']     = $this->state_info[$arr['state']];

        // 用户信息
        $userInfo = getUserInfoByUserId($arr['user_id']);
        $arr['user_info'] = $userInfo['data'];

        // 用户钱包
        $wallet = M('Wallet')->field('id,user_id',true)->where('user_id='.$arr['user_id'])->find();
        $arr['wallet'] = $wallet;
        $arr['created_date'] = date('Y-m-d',$arr['created_at']);
        return $arr;
    }
}